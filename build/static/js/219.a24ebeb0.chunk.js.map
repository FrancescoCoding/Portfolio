{"version":3,"file":"static/js/219.a24ebeb0.chunk.js","mappings":"+QAgBA,EAhBkB,SAAAA,GAChB,OACE,iCACEC,UAAWD,EAAME,OACjBC,IAAI,YACJC,MAAO,GACPC,OAAQ,IACRC,KAAK,QACDN,GANN,eAQE,iBAAMM,KAAK,UAAUC,EAAE,iCACvB,iBAAMD,KAAK,UAAUC,EAAE,mCCVzBC,EAAQ,IAAIC,MAAM,uCAClBC,EAAQ,IAAID,MAAM,uCAClBE,EAAQ,IAAIF,MAAM,uCAKhBG,EAAc,WACA,CAACJ,EAAOE,EAAOC,GAHhBE,KAAKC,MAAsB,EAAhBD,KAAKE,WAK3BC,QAoBR,EAjBmB,SAAAhB,GACjB,OACE,iCAAKiB,QAASL,EAAaT,IAAI,OAAOC,MAAO,GAAIC,OAAQ,QAAYL,GAArE,eACE,iBACEkB,eAAe,qBACfX,EAAE,2LACFD,KAAMN,EAAMmB,UAEd,iBACEZ,EAAE,0EACFD,KAAK,UAEP,mBAAQc,GAAI,GAAIC,GAAI,OAAQC,EAAG,EAAGhB,KAAK,c,oBCzB7C,GAAgB,eAAe,uCAAuC,OAAS,iCAAiC,YAAY,oCAAoC,MAAQ,gCAAgC,gBAAgB,wCAAwC,IAAM,8BAA8B,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,QAAU,kCAAkC,UAAY,oCAAoC,sBAAsB,8CAA8C,iBAAiB,yCAAyC,UAAY,qC,8BCuFloB,EA5EyB,SAAAN,GACvB,IAgBIuB,EAhBEC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,WAC/C,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAcC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBAcvCjC,EAAMkC,oBAERX,EAAkB,IADNvB,EAAMkC,kBAAkBC,QAAQ,cAAe,KAI7D,OACE,kBAAMlC,UAAWC,EAAAA,gBAAjB,UACG2B,IAAa,SAACO,EAAA,EAAD,CAASC,QAnBF,WACvBP,GAAa,MAoBVC,IACC,qBAAS9B,UAAWC,EAAAA,aAApB,WACE,sCACY,KACV,SAAC,EAAD,CAAYD,UAAWC,EAAAA,MAAciB,OAAQK,EAAYc,MAF3D,WAIA,sEAEE,kBAFF,kCAKA,gBAAKrC,UAAWC,EAAAA,iBAAhB,UACE,oBACEe,QA9Bc,WACP,IAAIR,MAAM,uCAChBO,OACXc,GAAa,IA4BH7B,UAAS,UAAKC,EAAAA,IAAL,YAAmBA,EAAO,GAAD,OAAIsB,EAAYL,UAFpD,0BAIgB,KACd,SAAC,MAAD,CACEoB,MAAO,CACLC,UAAW,kBACXC,SAAU,UACVC,WAAY,cAOvBX,IAAe,SAAC,EAAD,CAAW7B,OAAQA,EAAAA,aACnC,qBAASD,UAAWC,EAAAA,uBAApB,WACE,SAAC,KAAD,CAAWyC,MAAOpB,KAChBQ,IACA,iBAAK9B,UAAWC,EAAAA,kBAAhB,WACE,eACEqC,MAAO,CACLE,SAAU,OACVG,MAAM,GAAD,OAAKpB,EAAYc,MAH1B,gCAQA,cAAGC,MAAO,CAAEE,SAAU,OAAQG,MAAO,SAArC,oCC9DZ,EAZkB,WAChB,OACE,iCACE,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,CAAkBZ,kBAAmB,UACrC,SAACa,EAAA,EAAD,KACA,SAACC,EAAA,EAAD","sources":["assets/Separator.js","assets/RubberDuck.js","webpack://francesco-gruosso-portfolio/./src/components/content/PortfolioContent.module.css?57cf","components/content/PortfolioContent.jsx","pages/Portfolio.js"],"sourcesContent":["const Separator = props => {\r\n  return (\r\n    <svg\r\n      className={props.styles}\r\n      alt=\"separator\"\r\n      width={38}\r\n      height={125}\r\n      fill=\"none\"\r\n      {...props}\r\n    >\r\n      <path fill=\"#4239A7\" d=\"M30.571 0h6.793v125h-6.793z\" />\r\n      <path fill=\"#A73939\" d=\"M0 23.777h6.793v77.446H0z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Separator;\r\n","// Ultimate Honking technology\r\nlet honk1 = new Audio(\"https://files.catbox.moe/fl7wzu.ogg\");\r\nlet honk2 = new Audio(\"https://files.catbox.moe/mejpp4.ogg\");\r\nlet honk3 = new Audio(\"https://files.catbox.moe/s2pvvx.ogg\");\r\n// let honk4 = new Audio(\"https://files.catbox.moe/by7mer.ogg\");\r\n\r\nconst dice = () => Math.floor(Math.random() * 4);\r\n\r\nconst honkHandler = () => {\r\n  let randomAudio = [honk1, honk2, honk3]; // , honk4\r\n  let audio = randomAudio[dice()];\r\n  audio.play();\r\n};\r\n\r\nconst RubberDuck = props => {\r\n  return (\r\n    <svg onClick={honkHandler} alt=\"duck\" width={64} height={64.001} {...props}>\r\n      <path\r\n        shapeRendering=\"geometricPrecision\"\r\n        d=\"M50 26.001s-4-2-4-4c0-4 4-2 8-8C54 14.001 52 0 38 0 26 0 22 10.001 22 16.001c0 10 6 10 6 16 0 2-2 4-8 4-10 0-14-10-14-10s-6 4-6 14c0 12 8 24 26 24h10c6 0 18-8 18-18s-6-10-6-14 2-6 2-6z\"\r\n        fill={props.colour}\r\n      />\r\n      <path\r\n        d=\"M60 16.001c-4 0-6-2-6-2-4 6-8 4-8 8 0 2 4 4 4 4 4 0 14-6 14-8s-2-2-4-2z\"\r\n        fill=\"#f83\"\r\n      />\r\n      <circle cx={48} cy={12.001} r={2} fill=\"#333\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default RubberDuck;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main-content\":\"PortfolioContent_main-content__r5Y17\",\"appear\":\"PortfolioContent_appear__ygFeZ\",\"main-text\":\"PortfolioContent_main-text__ZfajK\",\"quack\":\"PortfolioContent_quack__9l1pi\",\"btn-container\":\"PortfolioContent_btn-container__kgKCZ\",\"btn\":\"PortfolioContent_btn__sGMOm\",\"canary\":\"PortfolioContent_canary__dooCG\",\"leaf\":\"PortfolioContent_leaf__Cn4Vm\",\"ocean\":\"PortfolioContent_ocean__3UArw\",\"magenta\":\"PortfolioContent_magenta__vLeeX\",\"separator\":\"PortfolioContent_separator__1CzjL\",\"astronaut-container\":\"PortfolioContent_astronaut-container__S0ssf\",\"astronaut-text\":\"PortfolioContent_astronaut-text__Vk5CX\",\"astronaut\":\"PortfolioContent_astronaut__jg9FI\"};","import Contact from \"./Contact\";\r\nimport Separator from \"../../assets/Separator\";\r\nimport RubberDuck from \"../../assets/RubberDuck\";\r\nimport { Astronaut } from \"../../assets/Animations\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\n\r\nimport styles from \"./PortfolioContent.module.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst PortfolioContent = props => {\r\n  const storeColour = useSelector(state => state.colours);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const isBigScreen = useMediaQuery({ query: \"(min-width: 1824px)\" });\r\n\r\n  const hideModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const clickSoundHandler = () => {\r\n    let clickSound = new Audio(\"https://files.catbox.moe/ptskhe.wav\");\r\n    clickSound.play();\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Convert \"0.7s to ms\"\r\n  let delayMS;\r\n  if (props.astronautDelaySec) {\r\n    let delay = props.astronautDelaySec.replace(/[^0-9\\\\.]+/g, \"\");\r\n    delayMS = delay * 1000;\r\n  }\r\n\r\n  return (\r\n    <main className={styles[\"main-content\"]}>\r\n      {showModal && <Contact onClose={hideModalHandler} />}\r\n\r\n      {isBigScreen && (\r\n        <section className={styles[\"main-text\"]}>\r\n          <h1>\r\n            Stand the{\" \"}\r\n            <RubberDuck className={styles.quack} colour={storeColour.hex} /> out\r\n          </h1>\r\n          <p>\r\n            ... as a frontend developer, UX designer,\r\n            <br />\r\n            initiator of horrible puns.\r\n          </p>\r\n          <div className={styles[\"btn-container\"]}>\r\n            <button\r\n              onClick={clickSoundHandler}\r\n              className={`${styles.btn} ${styles[`${storeColour.colour}`]}`}\r\n            >\r\n              Find out more{\" \"}\r\n              <FaChevronDown\r\n                style={{\r\n                  transform: \"translateY(3px)\",\r\n                  fontSize: \" 1.1rem\",\r\n                  marginLeft: \"\",\r\n                }}\r\n              />\r\n            </button>\r\n          </div>\r\n        </section>\r\n      )}\r\n      {isBigScreen && <Separator styles={styles.separator} />}\r\n      <section className={styles[\"astronaut-container\"]}>\r\n        <Astronaut delay={delayMS} />\r\n        {!isBigScreen && (\r\n          <div className={styles[\"astronaut-text\"]}>\r\n            <h1\r\n              style={{\r\n                fontSize: \"4rem\",\r\n                color: `${storeColour.hex}`,\r\n              }}\r\n            >\r\n              Francesco Gruosso\r\n            </h1>\r\n            <p style={{ fontSize: \"2rem\", color: \"white\" }}>Web dev etc.</p>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PortfolioContent;\r\n","import Navbar from \"../components/UI/Navbar\";\r\nimport Sidebar from \"../components/UI/Sidebar\";\r\nimport Transition from \"../components/UI/Transition\";\r\nimport ColourSelector from \"../components/UI/ColourSelector\";\r\nimport PortfolioContent from \"../components/content/PortfolioContent\";\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <>\r\n      <Transition />\r\n      <Navbar />\r\n      <PortfolioContent astronautDelaySec={\"1.2s\"} />\r\n      <ColourSelector />\r\n      <Sidebar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n"],"names":["props","className","styles","alt","width","height","fill","d","honk1","Audio","honk2","honk3","honkHandler","Math","floor","random","play","onClick","shapeRendering","colour","cx","cy","r","delayMS","storeColour","useSelector","state","colours","useState","showModal","setShowModal","isBigScreen","useMediaQuery","query","astronautDelaySec","replace","Contact","onClose","hex","style","transform","fontSize","marginLeft","delay","color","Transition","Navbar","ColourSelector","Sidebar"],"sourceRoot":""}